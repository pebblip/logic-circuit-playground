/**
 * CLOCKÈÅ∏ÊäûÊ©üËÉΩ„ÅÆSliceÔºà„Çø„Ç§„Éü„É≥„Ç∞„ÉÅ„É£„Éº„ÉàÁî®Ôºâ
 */

import type { StateCreator } from 'zustand';
import type { CircuitStore } from '../types';

export interface ClockSelectionSlice {
  // üéØ CLOCKÈÅ∏ÊäûÊìç‰Ωú
  setSelectedClockGate: (gateId: string | null) => void;
  autoSelectClockGate: () => void;
  clearClockSelection: () => void;
}

export const createClockSelectionSlice: StateCreator<
  CircuitStore,
  [],
  [],
  ClockSelectionSlice
> = (set, get) => ({
  // CLOCKÈÅ∏ÊäûÁä∂ÊÖã„ÇíË®≠ÂÆöÔºàËá™Âãï„Éà„É¨„Éº„Çπ‰ΩúÊàê„ÅØÂâäÈô§Ôºâ
  setSelectedClockGate: (gateId: string | null) => {
    console.log(`[ClockSelection] Setting selected CLOCK: ${gateId}`);
    
    set(state => ({
      selectedClockGateId: gateId
    }));
    
    // Ëá™Âãï„Éà„É¨„Éº„Çπ‰ΩúÊàê„ÅØÂâäÈô§ - „É¶„Éº„Ç∂„Éº„ÅåÊòéÁ§∫ÁöÑ„Å´ËøΩÂä†„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çã
  },

  // Ëá™ÂãïÈÅ∏Êäû„ÅØÂªÉÊ≠¢
  autoSelectClockGate: () => {
    // Ëá™ÂãïÈÅ∏ÊäûÊ©üËÉΩ„ÅØÂâäÈô§Ê∏à„Åø
  },

  // CLOCKÈÅ∏Êäû„Çí„ÇØ„É™„Ç¢
  clearClockSelection: () => {
    console.log(`[ClockSelection] Clearing CLOCK selection`);
    set(state => ({
      selectedClockGateId: null
    }));
    
    // „Çø„Ç§„Éü„É≥„Ç∞„ÉÅ„É£„Éº„Éà„ÇÇ„ÇØ„É™„Ç¢
    const state = get();
    if (state.timingChartActions) {
      state.timingChartActions.clearAllTraces();
    }
  }
});