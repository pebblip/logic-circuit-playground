/**
 * CLOCKÈÅ∏ÊäûÊ©üËÉΩ„ÅÆSliceÔºà„Çø„Ç§„Éü„É≥„Ç∞„ÉÅ„É£„Éº„ÉàÁî®Ôºâ
 */

import type { StateCreator } from 'zustand';
import type { CircuitStore } from '../types';

export interface ClockSelectionSlice {
  // üéØ CLOCKÈÅ∏ÊäûÊìç‰Ωú
  setSelectedClockGate: (gateId: string | null) => void;
  autoSelectClockGate: () => void;
  clearClockSelection: () => void;
}

export const createClockSelectionSlice: StateCreator<
  CircuitStore,
  [],
  [],
  ClockSelectionSlice
> = (set, get) => ({
  // CLOCKÈÅ∏ÊäûÁä∂ÊÖã„ÇíË®≠ÂÆöÔºàËá™Âãï„Éà„É¨„Éº„Çπ‰ΩúÊàê„ÇíÂæ©Ê¥ªÔºâ
  setSelectedClockGate: (gateId: string | null) => {
    set(() => ({
      selectedClockGateId: gateId,
    }));

    // CLOCK„ÅåÈÅ∏Êäû„Åï„Çå„Åü„ÇâËá™ÂãïÁöÑ„Å´„Éà„É¨„Éº„Çπ„Çí‰ΩúÊàê
    if (gateId) {
      const state = get();
      const clockGate = state.gates.find(
        g => g.id === gateId && g.type === 'CLOCK'
      );

      if (clockGate && state.timingChartActions) {
        // Êó¢Â≠ò„ÅÆ„Éà„É¨„Éº„Çπ„Çí„ÇØ„É™„Ç¢Ôºà‰∏ÄÊôÇÁöÑ„Å´ÂâäÈô§„Åó„Å¶„ÉÜ„Çπ„ÉàÔºâ
        // state.timingChartActions.clearAllTraces();

        // CLOCK„Ç≤„Éº„Éà„ÅÆ„Éà„É¨„Éº„Çπ„ÇíËøΩÂä†
        state.timingChartActions.addTrace(gateId, 'output', 0);

        // „Çø„Ç§„Éü„É≥„Ç∞„ÉÅ„É£„Éº„Éà„Éë„Éç„É´„ÇíËá™ÂãïË°®Á§∫Ôºà‰∏ÄÊôÇÁöÑ„Å´ÁÑ°ÂäπÂåñÔºâ
        // „É¶„Éº„Ç∂„Éº„ÅåÊòéÁ§∫ÁöÑ„Å´„Çø„Ç§„Éü„É≥„Ç∞„ÉÅ„É£„Éº„Éà„Éú„Çø„É≥„ÇíÊäº„Åó„Åü„Å®„Åç„ÅÆ„ÅøË°®Á§∫„Åô„Çã„Çà„ÅÜ„Å´Â§âÊõ¥
        // if (!state.timingChart.isVisible) {
        //   state.timingChartActions.showPanel();
        // }
      }
    }
  },

  // Ëá™ÂãïÈÅ∏Êäû„ÅØÂªÉÊ≠¢
  autoSelectClockGate: () => {
    // Ëá™ÂãïÈÅ∏ÊäûÊ©üËÉΩ„ÅØÂâäÈô§Ê∏à„Åø
  },

  // CLOCKÈÅ∏Êäû„Çí„ÇØ„É™„Ç¢
  clearClockSelection: () => {
    set(() => ({
      selectedClockGateId: null,
    }));

    // „Çø„Ç§„Éü„É≥„Ç∞„ÉÅ„É£„Éº„Éà„ÇÇ„ÇØ„É™„Ç¢
    const state = get();
    if (state.timingChartActions) {
      state.timingChartActions.clearAllTraces();
    }
  },
});
