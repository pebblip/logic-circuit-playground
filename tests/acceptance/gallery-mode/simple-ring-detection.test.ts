/**
 * „Ç∑„É≥„Éó„É´„É™„É≥„Ç∞„Ç™„Ç∑„É¨„Éº„Çø„ÅÆÊ§úÂá∫„É≠„Ç∏„ÉÉ„ÇØ„ÅÆ„ÉÜ„Çπ„Éà
 * useUnifiedCanvas.ts„ÅÆÂÆüÈöõ„ÅÆ„É≠„Ç∏„ÉÉ„ÇØ„Çí„ÉÜ„Çπ„Éà
 */

import { describe, it, expect } from 'vitest';
import { SIMPLE_RING_OSCILLATOR } from '@/features/gallery/data/simple-ring-oscillator';

describe('Simple Ring Oscillator Detection Logic', () => {
  it('should be detected as oscillator circuit by useUnifiedCanvas logic', () => {
    const dataSource = { galleryCircuit: SIMPLE_RING_OSCILLATOR };
    
    // useUnifiedCanvas.ts line 126-138 „ÅÆ„É≠„Ç∏„ÉÉ„ÇØ„ÇíÂÜçÁèæ
    const hasCircularDependency = dataSource.galleryCircuit && (() => {
      // „Ç™„Ç∑„É¨„Éº„Çø„ÉºÂõûË∑Ø„ÅÆÁâπÂÆö„Éë„Çø„Éº„É≥„ÇíÊ§úÂá∫
      const circuitTitle = dataSource.galleryCircuit!.title || '';
      const isOscillatorCircuit = [
        '„Ç™„Ç∑„É¨„Éº„Çø', '„Ç™„Ç∑„É¨„Éº„Çø„Éº', '„Ç´„Ç™„Çπ', '„Éï„Ç£„Éú„Éä„ÉÉ„ÉÅ', 
        '„Ç∏„Éß„É≥„ÇΩ„É≥', 'LFSR', '„É™„É≥„Ç∞', '„Éû„É≥„ÉÄ„É©', '„É°„É¢„É™'
      ].some(keyword => circuitTitle.includes(keyword));
      
      // „Ç™„Ç∑„É¨„Éº„Çø„ÉºÂõûË∑Ø„Åæ„Åü„ÅØsimulationConfig.needsAnimation„Åå„ÅÇ„ÇãÂ†¥Âêà
      const isAnimationRequired = dataSource.galleryCircuit!.simulationConfig?.needsAnimation;
      
      return isOscillatorCircuit || isAnimationRequired;
    })();

    // Âæ™Áí∞‰æùÂ≠òÂõûË∑ØÔºà„Ç™„Ç∑„É¨„Éº„Çø„ÉºÔºâ„ÅØÂº∑Âà∂ÁöÑ„Å´EVENT_DRIVEN‰ΩøÁî®
    const strategy = hasCircularDependency ? 'EVENT_DRIVEN_ONLY' : 'AUTO_SELECT';
    
    console.log('üîç Detection Test Results:');
    console.log(`Title: "${SIMPLE_RING_OSCILLATOR.title}"`);
    console.log(`Has circular dependency (by title/config): ${hasCircularDependency}`);
    console.log(`Selected strategy: ${strategy}`);
    console.log(`needsAnimation: ${SIMPLE_RING_OSCILLATOR.simulationConfig?.needsAnimation}`);
    
    // „ÉÅ„Çß„ÉÉ„ÇØÈ†ÖÁõÆ
    expect(hasCircularDependency).toBe(true);
    expect(strategy).toBe('EVENT_DRIVEN_ONLY');
    expect(SIMPLE_RING_OSCILLATOR.simulationConfig?.needsAnimation).toBe(true);
  });

  it('should match keyword detection', () => {
    const title = SIMPLE_RING_OSCILLATOR.title;
    const keywords = [
      '„Ç™„Ç∑„É¨„Éº„Çø', '„Ç™„Ç∑„É¨„Éº„Çø„Éº', '„Ç´„Ç™„Çπ', '„Éï„Ç£„Éú„Éä„ÉÉ„ÉÅ', 
      '„Ç∏„Éß„É≥„ÇΩ„É≥', 'LFSR', '„É™„É≥„Ç∞', '„Éû„É≥„ÉÄ„É©', '„É°„É¢„É™'
    ];
    
    const matchedKeywords = keywords.filter(keyword => title.includes(keyword));
    
    console.log('üéØ Keyword Matching:');
    console.log(`Title: "${title}"`);
    console.log(`Matched keywords: [${matchedKeywords.join(', ')}]`);
    
    expect(matchedKeywords.length).toBeGreaterThan(0);
    expect(matchedKeywords).toContain('„Ç™„Ç∑„É¨„Éº„Çø');
    expect(matchedKeywords).toContain('„É™„É≥„Ç∞');
  });

  it('should have correct simulation config', () => {
    const config = SIMPLE_RING_OSCILLATOR.simulationConfig;
    
    console.log('‚öôÔ∏è Simulation Config:');
    console.log(JSON.stringify(config, null, 2));
    
    expect(config).toBeDefined();
    expect(config?.needsAnimation).toBe(true);
    expect(config?.expectedBehavior).toBe('oscillator');
    expect(config?.updateInterval).toBeDefined();
  });
});